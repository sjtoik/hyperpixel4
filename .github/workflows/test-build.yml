name: .deb test build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Code tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: |
          ./hyperpixel4-backlight test

  build:
    name: Build the package
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      filename: ${{ steps.get_filename.outputs.filename }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          sudo apt update; sudo apt install -y debhelper build-essential
          make -C package build
      - name: Get version
        id: get_version
        run: |
          echo "::set-output name=version::`cd package && dpkg-parsechangelog --show-field Version`"
      - name: Get filename
        id: get_filename
        run: |
          echo "::set-output name=filename::`ls *.deb | head -n 1`"
      - name: Dump changelog
        id: get_changelog
        run: |
          cd package && dpkg-parsechangelog --show-field Changes > ../${{ steps.get_filename.outputs.filename }}.changelog
      - uses: actions/upload-artifact@v2
        name: Upload artifact
        with:
          name: ${{ steps.get_filename.outputs.filename }}
          path: ./${{ steps.get_filename.outputs.filename }}
      - uses: actions/upload-artifact@v2
        name: Upload changelog
        with:
          name: ${{ steps.get_filename.outputs.filename }}.changelog
          path: ./${{ steps.get_filename.outputs.filename }}.changelog

  release:
    name: Release the artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Test output
        run: |
          echo ${{needs.build.outputs.version}}
          echo ${{needs.build.outputs.filename}}

      #TODO: figure out how to release
